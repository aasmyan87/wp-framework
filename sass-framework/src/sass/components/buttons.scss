@import "../abstracts/variables/variables-theme";

//  Core
.fw-btn {
  display: inline-block;
  text-align: center;
  box-shadow: none;
  user-select: none;
  border-style: solid;
  text-decoration: none !important;
  cursor: pointer;
  transition: color $input_btn_transition, background-color $input_btn_transition, box-shadow $input_btn_transition;
  &:disabled, &.disabled {
    pointer-events: none !important;
    cursor: default;
    opacity: .6;
  }
}
.btn-block{
  width: 100%;
  display: block;
}

//  Generator for button variants
@mixin button_variant($variant: ()) {
  $variant: map-merge((), $variant);
  //  define class
  #{map-get($variant, class)} {
    // Styling
    background-color: map-get($variant, background-color);
    color: map-get($variant, color);
    border-color: map-get($variant, border-color);
    font-size: map-get($variant, font-size);
    font-weight: map-get($variant, font-weight);
    letter-spacing: map-get($variant, letter-spacing);
    border-radius: map-get($variant, border-radius);
    border-width: map-get($variant, border-width);
    line-height: map-get($variant, line-height);
    text-transform: map-get($variant, text-transform);
    padding-right: map-get($variant, padding-x);
    padding-left: map-get($variant, padding-x);
    box-shadow: map_get($variant, box-shadow);
    @if map-get($variant, height) != null and map-get($variant, line-height) != null and map-get($variant, line-height) != null {
      padding-top: (map-get($variant, height) - map-get($variant, line-height) - (map-get($variant, border-width)*2)) /2;
      padding-bottom: (map-get($variant, height) - map-get($variant, line-height) - (map-get($variant, border-width)*2)) /2;
    }

    &:hover {
      color: map-get($variant, color--HOVER);
      background-color: map-get($variant, background-color--HOVER);
      border-color: map-get($variant, border-color--HOVER);
    }

    &:visited{
      color: map-get($variant, color);
    }

    &:focus {
      box-shadow: map-get($variant, box-shadow--FOCUS);
    }

    &:disabled, &.disabled {
      &:hover {
        background-color: map-get($variant, background-color);
        border-color: map-get($variant, border-color);
        color: map-get($variant, color);
      }
    }
  }
}

//  upload file
.file-btn-wrap {
  position: relative;
  width: 200px;
  transition: color $link_transition, background-color $link_transition;

  &:hover {
    opacity: .8;
  }

  button {
    width: 100%;
  }

  input[type="file"] {
    width: 100%;
    font-size: 0;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    opacity: 0;
    cursor: pointer;
    z-index: 1;
    background: #000;
    border-style: solid;
    box-shadow: none;
  }
}

//  Button with icon
.btn-icon{
  display: inline-flex;
  align-items: center;
  &:before{
    font-family: $web_icon_font_family;
    line-height: 1;
    font-size: 15px;
    font-weight: bold;

  }
}
.btn-icon-left{
  &:before{
    margin-right: 6px;
  }
}
.btn-icon-right{
  flex-flow: row-reverse;
  &:before{
    margin-left: 6px;
  }
}

//  Sizes | height, line-height and border-width - required
@include button_variant((
    class: (
        '.fw-btn'
    ),
    border-radius: 0,
    font-weight: normal,
    font-size: 16px,
    letter-spacing: normal,
    text-transform: uppercase,
    padding-x: 25px,
    height: 45px,
    border-width: 1px,
    line-height: 20px
));
//  Sizes
@include button_variant((
    class: (
        '.btn-lg'
    ),
    font-size: 18px,
    height: 65px,
    border-width: 1px,
    line-height: 20px
));



//  Colors
@include button_variant((
    class: '.btn-primary',
    color: #fff,
    color--HOVER: #fff,
    background-color: map-get($colors, primary),
    background-color--HOVER: rgba(map-get($colors, primary), .8),
    border-color: map-get($colors, primary),
    border-color--HOVER: transparent,
    box-shadow: 0px 0px 15px -2px rgba(map-get($colors, primary), .3),
    box-shadow--FOCUS: 0 0 0 0.2rem rgba(map-get($colors, primary), .3),
));
@include button_variant((
    class: '.btn-secondary',
    color: #fff,
    color--HOVER: #fff,
    background-color: map-get($colors, secondary),
    background-color--HOVER: rgba(map-get($colors, secondary), .8),
    border-color: map-get($colors, secondary),
    border-color--HOVER: transparent,
    box-shadow: 0px 0px 15px -2px rgba(map-get($colors, secondary), .3),
    box-shadow--FOCUS: 0 0 0 0.2rem rgba(map-get($colors, secondary), .3),
));



